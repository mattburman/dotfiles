;; this is a little bit weird, but it's convenient
;; the rule [:!Ca :!T1]
;; means from command a to control 1
;; :!Ca is keycode :a and prefix a with !C

;; here's the definition

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any
;;
;; keycodes: https://github.com/pqrs-org/Karabiner-Elements/blob/main/src/apps/SettingsWindow/Resources/simple_modifications.json
{
 :profiles {:Default {:default true
         :alone   80 ; hold for .. ms to register single tap
         :held    50 ; TODO: not sure what it's for
         :delay   0 ; time after which the key press is delayed
         :sim     10}} ; keys need to be pressed within this threshold to be considered simultaneous
 :applications { ;; osascript -e 'id of app "Google Chrome"'
    :Intellij [
      "^com\\.jetbrains\\.RustRover$"
      "^com\\.jetbrains\\.IntelliJ IDEA Ultimate$"
      "^com\\.jetbrains\\.Goland$"
   ]
 }
:templates {
    :launch "open -a '%s.app'"
    :open "open '%s'"
    :alfred "osascript -e 'tell app \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"\"'"

    ;; https://developers.raycast.com/information/lifecycle/deeplinks
    ;; raycast://extensions/<author-or-owner>/<extension-name>/<command-name>
    ;; can obtain deeplink from cmd+k on the action and selecting copy deeplink
    :raycast "open 'raycast://extensions/%s'"
}
:simlayers {
    :vi-mode {:key :d}
    ; :vi-mode {:key :d :condi :!Intellij} ; <-- example how to turn off mode
    :s-mode-intellij {:key :s :condi :Intellij}
    :quote-mode {:key :quote}
    :e-mode {:key :e} ; cmd
    :window-mode {:key :a}
    :o-mode {:key :o}
    :p-mode {:key :p}
    :caps_lock-mode {:key :caps_lock}
    :semicolon-mode {:key :semicolon}
    :layouts-mode {:key :s}
    :m-mode {:key :m} ; cmd+shift
    :n-mode {:key :n} ; numbers on home row
    :c-mode {:key :c} ; cmd+shift alternative for weird keys like []
}
:main [
    {:des "window layouts in aerospace etc"
      :rules [:layouts-mode
       ; [:spacebar [:!OSTspacebar]] ;; cycle-layout-backward
       ; [:w [:!OSTw]] ;; throw-screen-1
       ; [:e [:!OSTe]] ;; throw-screen-2
       ; [:r [:!OSTr]] ;; throw-screen-3
       ; [:q [:!OSTq]] ;; throw-screen-4

       [:h [:!OSh]]
       [:l [:!OSl]]
       [:j [:!OSj]]
       [:k [:!OSk]]

       [:n [:!Ocomma]]
       [:m [:!Oslash]]

       [:open_bracket [:!OShyphen]] ;; resize start +
       [:close_bracket [:!OSequal_sign]] ;; resize smart -
       [:hyphen [:!Chyphen]] ;; zoom out
       [:equal_sign [:!Cequal_sign]] ;; zoom in

       ; [:1 [:!OST1]] ;; throw-space-1
       ; [:2 [:!OST2]] ;; throw-space-2
       ; [:3 [:!OST3]] ;; throw-space-3
       ; [:4 [:!OST4]] ;; throw-space-4
       ; [:5 [:!OST5]] ;; throw-space-5
       ; [:6 [:!OST6]] ;; throw-space-6
       ; [:7 [:!OST7]] ;; throw-space-7
       ; [:8 [:!OST8]] ;; throw-space-8
       ; [:9 [:!OST9]] ;; throw-space-9
       ; [:0 [:!OST0]] ;; throw-space-10
       ; [:left_arrow [:!OSTleft_arrow]] ;; throw-space-left
       ; [:right_arrow [:!OSTright_arrow]] ;; throw-space-right
       ; [:t [:!OSTt]] ;; toggle-tiling
       ; [:x [:!OSTx]] ;; toggle-focus-follows-mouse
       ; [:z [:!OSTz]] ;; relaunch-amethyst
     ]
    }

    {:des "o-mode - search-mode"
      :rules [:o-mode
        ; navigation of things in a vertical list with one hand
        [:j :down_arrow]
        [:k :up_arrow]
        [:i :!CSa] ; chrome switch. todo slack CK; intellij CE
        [:h :return_or_enter]

        ; search
        ;; [:n [:raycast "ChrisKohler/kubens/kubens"]] ; cant set kubens path
        [:a :!CSspacebar] ; 1Password search
        [:b [:raycast "Codely/google-chrome/search-bookmarks"]]
        [:c [:raycast "raycast/clipboard-history/clipboard-history"]]
        [:e [:raycast "raycast/emoji-symbols/search-emoji-symbols"]]
        [:f [:raycast "raycast/file-search/search-files"]]
        [:g [:raycast "priithaamer/docker/container_list"]]
        [:m [:raycast "raycast/navigation/search-menu-items"]]
        [:n [:raycast "oktay/kubectx/context"]]
        [:p [:raycast "rolandleth/kill-process/index"]]
        [:r [:raycast "mrmartineau/search-github-stars/index"]] ;; Search Repositories (Github)
        [:s [:raycast "mattisssa/spotify-player/search"]]
        [:t [:raycast "Codely/google-chrome/search-tab"]]
        [:u [:raycast "Codely/google-chrome/search-history"]]
        [:v [:raycast "GastroGeek/folder-search/search"]]
        [:w [:raycast "raycast/navigation/switch-windows"]]
        [:x [:raycast "raycast/contacts/search-contacts"]]
        [:y [:raycast "priithaamer/docker/image_list"]]
     ]
    }

    {:des "Vi Mode [D as Trigger Key]"
      :rules [:vi-mode
        [:w [:!Oleft_arrow :!OSright_arrow]]
        ; [:r :!Stab] not sure what for?
        [:r :!Tr]
        [:t :tab]
        [:g :!Ctab]
        [:##j :down_arrow]
        [:##k :up_arrow]
        [:##h :left_arrow]
        [:##l :right_arrow]
        [:##b :!Oleft_arrow]
        [:##n :!Oright_arrow]
        [:##m :!Th] ; ctrl+h often backspace
        [:##a :!Ca]; highlight all
        [:##e :!Te]; go to end of line via ctrl-e
        [:##f :return_or_enter]
        [:v :left_shift]
      ]
    }

    {:des "Vi-like Debugger Mode intellij [S as Trigger Key]"
      :rules [
        :s-mode-intellij
        [:##j :f8] ;; step over
        ;; [:##k :up_arrow]
        [:##r :!CSOTr] ;; re-run current test (non-defualt custom intellij bind)
        [:##f :!COr] ;; resume program / debug configuration menu
        [:##h :!Sf8] ;; step out
        [:##l :f7] ;; step into
        [:##v [:left_option :f9]] ; run to cursor / debug configuration menu
      ]
    }

    {:des "Window mode [A key as Trigger Key]",
     :rules [:window-mode
        ;; copy from amethyst mode 1
        [:y [:!OSt]] ;; toggle-float
        [:4 [:!OS4]] ;; select-fullscreen-layout
        [:3 [:!OS3]] ;; select-middle-wide-layout
        [:2 [:!OS2]] ;; select-two-pane-layout
        [:spacebar [:!OSspacebar]] ;; cycle-layout

        [:h [:!Oh]]
        [:l [:!Ol]]
        [:j [:!Oj]]
        [:k [:!Ok]]

        [:return_or_enter [:!OSreturn_or_enter]] ;; swap-main

        ;; semicolon alias for swap-main
        [:semicolon [:!OSreturn_or_enter]] ;; swap-main

        [:hyphen [:!Chyphen]] ;; zoom out
        [:equal_sign [:!Cequal_sign]] ;; zoom in

        ;; left home row windows
        [:s [:launch "Slack"]]
        [:d [:launch "kitty"]]
        [:f [:launch "RustRover"]]
        [:g [:launch "Google Chrome"]]

        ;; left below
        [:x [:launch "1Password"]]
        [:c [:launch "Google Calendar"]]
        [:v [:launch "Gmail"]]

        ;; left above
        [:w :!Cw] ; close tab
        [:e [:raycast "raycast/navigation/switch-windows"]]
        [:r {:key :non_us_backslash :modi :command}] ; switch same app
        [:t :!Creturn_or_enter] ; opens new split in kitty

        ;; right home row
        [:j [:!CSopen_bracket ]] ; switch tabs left
        [:k [:!CSclose_bracket ]] ; switch tabs right

        [:b {:key :tab :modi :command}] ; window switcher
        [:i [:launch "kitty" ]]
        [:n :!CSopen_bracket ]
        [:m :!CSclose_bracket ]
        [:o [:launch "2Do"]]
        [:p :!CSa] ; chrome tab switcher + intellij action search
        ;; [:m :!CSm] ; todo make kitty only. toggle maximize in kitty, otherwise nm
      ]
    }

    {:des "Caps mode",
         :rules [:caps_lock-mode
                 [:open_bracket :!TOopen_bracket]
                 [:close_bracket :!TOclose_bracket]
                 [:semicolon :!TOsemicolon]
                 [:quote :!TOquote]
                 [:comma :!TOcomma]
                 [:period :!TOperiod]
                 [:equal_sign :!TOequal_sign]
                 [:hyphen :!TOhyphen]
                 [:a :!Ta]; ctrl-a start of line
                 [:b :!Tb]; ctrl-b tmux mode
                 [:c :!TOc]
                 [:d :!TOd]
                 [:e :!Te]; ctrl-e end of line
                 [:f :!TOf]
                 [:g :!TOg]
                 [:i :!TOi]
                 [:h :left_arrow]
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:l :right_arrow]
                 [:m :!TOm]
                 [:n :!TOn]
                 [:o :!TOo]
                 [:p :!TOp]
                 [:q :!TOq]
                 [:r :!Tr]; redo in vi; fzf ctrl-r
                 [:s :!TOs]
                 [:t :!Tt]; fzf ctrl-t
                 [:u :!TOu]
                 [:v :!TOv]
                 [:w :!TOw]
                 [:x :!TOx]
                 [:y :!TOy]
                 [:z :!TOz]
                 [:1 :!TO1]
                 [:2 :!TO2]
                 [:3 :!TO3]
                 [:4 :!TO4]
                 [:5 :!TO5]
                 [:6 :!TO6]
                 [:7 :!TO7]
                 [:8 :!TO8]
                 [:9 :!TO9]
                 [:0 :!TO0]]}

    ; https://github.com/nikitavoloboev/config/blob/c2f060e9c67f037b879715fe862e8effa2a8b955/karabiner/karabiner.edn#LL235C1-L279C66
    {:des "ekey (cmd)"
         :rules [:e-mode
                 [:q :!Cq]
                 [:w :!Cw]
                 [:r :!Cr]
                 [:t :!Ct]
                 [:u :!Cu]
                 [:i :!Ci]
                 [:p :!Cp]
                 [:open_bracket :!Copen_bracket]
                 [:close_bracket :!Cclose_bracket]
                 [:semicolon :!Csemicolon]
                 [:quote :!Cquote]
                 [:comma :!Ccomma]
                 [:period :!Cperiod]
                 [:slash :!Cslash]
                 [:a :!Ca]
                 [:b :!Cb]
                 [:c :!Cc]
                 [:d :!Cd]
                 [:f :!Cf]
                 [:g :!Cg]
                 [:h :!Ch]
                 [:j :!Cj]
                 [:k :!Ck]
                 [:l :!Cl]
                 [:m :!Cm]
                 [:n :!Cn]
                 [:o :!Co]
                 [:s :!Cs]
                 [:v :!Cv]
                 [:x :!Cx]
                 [:y :!Cy]
                 [:z :!Cz]
                 [:1 :!C1]
                 [:2 :!C2]
                 [:3 :!C3]
                 [:4 :!C4]
                 [:5 :!C5]
                 [:6 :!C6]
                 [:7 :!C7]
                 [:8 :!C8]
                 [:9 :!C9]
                 [:0 :!C0]
                 [:hyphen :!Chyphen]
                 [:equal_sign :!Cequal_sign]
                 [:spacebar :!Cspacebar]
                 [:tab :!Ctab]
                 [:non_us_backslash :!Cnon_us_backslash]
                 ]}

      {:des "quote (cmd + shift)"
         :rules [:quote-mode
                 [:j :!CSj]
                 [:k :!CSk]
                 [:l :!CSl]
                 [:h :!CSh]

                 [:1 :!CS1]
                 [:2 :!CS2]
                 [:3 :!CS3]
                 [:4 :!CS4]
                 [:5 :!CS5]
                 [:6 :!CS6]
                 [:7 :!CS7]
                 [:8 :!CS8]
                 [:9 :!CS9]
                 [:0 :!CS0]
                 [:w :!CSw]
                 [:e :!CSe]
                 [:r :!CSr]
                 [:t :!CSt]
                 [:y :!CSy]
                 [:u :!CSu]
                 [:i :!CSi]
                 [:o :!CSo]
                 [:p :!CSp]
                 [:open_bracket :!CSopen_bracket]
                 [:close_bracket :!CSclose_bracket]
                 [:a :!CSa]
                 [:s :!CSs]
                 [:d :!CSd]
                 [:f :!CSf]
                 [:g :!CSg]
                 [:h :!CSh]
                 ; [:j :!CSj]
                 ; [:k :!CSk]
                 ; [:l :!CSl]
                 [:semicolon :!CSsemicolon]
                 ; [:quote :!CSquote]
                 [:z :!CSz]
                 [:x :!CSx]
                 [:c :!CSc]
                 [:v :!CSv]
                 [:b :!CSb]
                 [:n :!CSn]
                 [:m :!CSm]
                 [:comma :!CScomma]
                 [:period :!CSperiod]
                 [:slash :!CSslash]
                 [:spacebar :!CSOe]
       ]} ; Selection -> YouTube

  {:des "p-mode"
   :rules [:p-mode
                 ; navigating tabs
                 [:j :!CSopen_bracket] ; switch left
                 [:k :!CSclose_bracket] ; switch right
                 [:n :!Ct] ; new tab
                 [:m :!Cw] ; close tab
                 [:h :return_or_enter]
   ]}

  {:des "n-mode numbers on home row"
      :rules [:n-mode
              [:a :1]
              [:s :2]
              [:d :3]
              [:f :4]
              [:g :5]
              [:h :6]
              [:j :7]
              [:k :8]
              [:l :9]
              [:semicolon :0]
              ]
   }

  {:des "colonkey (shift)"
         :rules [:semicolon-mode
                 ; navigation in history
                 [:j :!Cleft_arrow] ; back
                 [:k :!Cright_arrow] ; forward

                 ; shift
                 [:1 :!S1]
                 [:2 :!S2]
                 [:3 :!S3]
                 [:4 :!S4]
                 [:5 :!S5]
                 [:q :!Sq]
                 [:w :!Sw]
                 [:e :!Se]
                 [:r :!Sr]
                 [:t :!St]
                 [:y :!Sy]
                 [:u :!Su]
                 [:i :!Si]
                 [:o :!So]
                 [:p :!Sp]
                 [:a :!Sa]
                 [:s :!Ss]
                 [:d :!Sd]
                 [:f :!Sf]
                 [:g :!Sg]
                 [:h :!Sh]
                 ; [:j :!Sj]
                 ; [:k :!Sk]
                 [:l :!Sl]
                 [:grave_accent_and_tilde [:!Sgrave_accent_and_tilde]] ; -> ~
                 [:z :!Sz]
                 [:x :!Sx]
                 [:c :!Sc]
                 [:v :!Sv]
                 [:b :!Sb]
                 [:n :!Sn]
                 [:m :!Sm]
                 ]}

  {:des "cmd+shift"
         :rules [:m-mode
                 [:1 :!CS1]
                 [:2 :!CS2]
                 [:3 :!CS3]
                 [:4 :!CS4]
                 [:5 :!CS5]
                 [:q :!CSq]
                 [:w :!CSw]
                 [:e :!CSe]
                 [:r :!CSr]
                 [:t :!CSt]
                 [:y :!CSy]
                 [:u :!CSu]
                 [:i :!CSi]
                 [:o :!CSo]
                 [:p :!CSp]
                 [:a :!CSa]
                 [:s :!CSs]
                 [:d :!CSd]
                 [:f :!CSf]
                 [:g :!CSg]
                 [:h :!CSh]
                 [:j :!CSj]
                 [:k :!CSk]
                 [:l :!CSl]
                 [:z :!CSz]
                 [:x :!CSx]
                 [:c :!CSc]
                 [:v :!CSv]
                 [:b :!CSb]
                 [:n :!CSn]
                 [:open_bracket :!CSopen_bracket]
                 [:close_bracket :!CSclose_bracket]
                 [:return_or_enter :!CSreturn_or_enter]
                 ; [:m :!CSm]
                 ]}

  {:des "cmd+shift alternative"
         :rules [:c-mode
                 [:1 :!CS1]
                 [:2 :!CS2]
                 [:3 :!CS3]
                 [:4 :!CS4]
                 [:5 :!CS5]
                 [:q :!CSq]
                 [:w :!CSw]
                 [:e :!CSe]
                 [:r :!CSr]
                 [:t :!CSt]
                 [:y :!CSy]
                 [:u :!CSu]
                 [:i :!CSi]
                 [:o :!CSo]
                 [:p :!CSp]
                 [:a :!CSa]
                 [:s :!CSs]
                 [:d :!CSd]
                 [:f :!CSf]
                 [:g :!CSg]
                 [:h :!CSh]
                 [:j :!CSopen_bracket] ; different
                 [:k :!CSclose_bracket] ; different
                 [:l :!CSl]
                 [:z :!CSz]
                 [:x :!CSx]
                 ; [:c :!CSc]
                 [:v :!CSv]
                 [:b :!CSb]
                 [:n :!CSn]
                 [:open_bracket :!CSopen_bracket]
                 [:close_bracket :!CSclose_bracket]
                 [:return_or_enter :!CSreturn_or_enter]
                 [:m :!CSm]
                 ]}
]
}
